<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
<testsuite timestamp="2025-05-12T00:19:10" hostname="archlinux" package="mem_led_axi" id="0" name="prf" tests="36" errors="0" failures="0" time="1" skipped="4">
<properties>
<property name="os" value="Linux"/>
<property name="expect" value="PASS"/>
<property name="status" value="PASS"/>
</properties>
<testcase classname="prf" name="build execution" time="0">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi at mem_led_axi.v:238.13-238.68" time="0" type="ASSERT" location="mem_led_axi.v:238.13-238.68" id="_witness_.check_assert_mem_led_axi_v_238_59">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi at mem_led_axi.v:239.13-239.68" time="0" type="ASSERT" location="mem_led_axi.v:239.13-239.68" id="_witness_.check_assert_mem_led_axi_v_239_62">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi at mem_led_axi.v:240.13-240.68" time="0" type="ASSERT" location="mem_led_axi.v:240.13-240.68" id="_witness_.check_assert_mem_led_axi_v_240_64">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi at mem_led_axi.v:246.13-246.37" time="0" type="ASSERT" location="mem_led_axi.v:246.13-246.37" id="_witness_.check_assert_mem_led_axi_v_246_70">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:251.3-251.24" time="0" type="ASSERT" location="faxil_slave.v:251.3-251.24" id="_witness_.check_assert_faxil_slave_v_251_143">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:252.3-252.24" time="0" type="ASSERT" location="faxil_slave.v:252.3-252.24" id="_witness_.check_assert_faxil_slave_v_252_145">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:277.3-277.27" time="0" type="ASSERT" location="faxil_slave.v:277.3-277.27" id="_witness_.check_assert_faxil_slave_v_277_151">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:280.3-280.27" time="0" type="ASSERT" location="faxil_slave.v:280.3-280.27" id="_witness_.check_assert_faxil_slave_v_280_157">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:283.3-283.31" time="0" type="ASSERT" location="faxil_slave.v:283.3-283.31" id="_witness_.check_assert_faxil_slave_v_283_162">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:286.3-286.31" time="0" type="ASSERT" location="faxil_slave.v:286.3-286.31" id="_witness_.check_assert_faxil_slave_v_286_167">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:332.4-332.24" time="0" type="ASSERT" location="faxil_slave.v:332.4-332.24" id="_witness_.check_assert_faxil_slave_v_332_213">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:333.4-333.32" time="0" type="ASSERT" location="faxil_slave.v:333.4-333.32" id="_witness_.check_assert_faxil_slave_v_333_214">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:334.4-334.32" time="0" type="ASSERT" location="faxil_slave.v:334.4-334.32" id="_witness_.check_assert_faxil_slave_v_334_216">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:340.4-340.24" time="0" type="ASSERT" location="faxil_slave.v:340.4-340.24" id="_witness_.check_assert_faxil_slave_v_340_221">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:341.4-341.32" time="0" type="ASSERT" location="faxil_slave.v:341.4-341.32" id="_witness_.check_assert_faxil_slave_v_341_222">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:352.11-352.32" time="0" type="ASSERT" location="faxil_slave.v:352.11-352.32" id="_witness_.check_assert_faxil_slave_v_352_413">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:353.11-353.32" time="0" type="ASSERT" location="faxil_slave.v:353.11-353.32" id="_witness_.check_assert_faxil_slave_v_353_416">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:394.4-394.41" time="0" type="ASSERT" location="faxil_slave.v:394.4-394.41" id="_witness_.check_assert_faxil_slave_v_394_301">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:417.4-417.40" time="0" type="ASSERT" location="faxil_slave.v:417.4-417.40" id="_witness_.check_assert_faxil_slave_v_417_315">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:437.4-437.41" time="0" type="ASSERT" location="faxil_slave.v:437.4-437.41" id="_witness_.check_assert_faxil_slave_v_437_325">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:582.3-582.54" time="0" type="ASSERT" location="faxil_slave.v:582.3-582.54" id="_witness_.check_assert_faxil_slave_v_582_247">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:584.3-584.54" time="0" type="ASSERT" location="faxil_slave.v:584.3-584.54" id="_witness_.check_assert_faxil_slave_v_584_250">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:586.3-586.54" time="0" type="ASSERT" location="faxil_slave.v:586.3-586.54" id="_witness_.check_assert_faxil_slave_v_586_253">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:592.3-592.25" time="0" type="ASSERT" location="faxil_slave.v:592.3-592.25" id="_witness_.check_assert_faxil_slave_v_592_259">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:595.3-595.24" time="0" type="ASSERT" location="faxil_slave.v:595.3-595.24" id="_witness_.check_assert_faxil_slave_v_595_265">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:598.3-598.25" time="0" type="ASSERT" location="faxil_slave.v:598.3-598.25" id="_witness_.check_assert_faxil_slave_v_598_271">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:647.4-647.47" time="0" type="ASSERT" location="faxil_slave.v:647.4-647.47" id="_witness_.check_assert_faxil_slave_v_647_361">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:653.4-653.47" time="0" type="ASSERT" location="faxil_slave.v:653.4-653.47" id="_witness_.check_assert_faxil_slave_v_653_364">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:678.3-678.36" time="0" type="ASSERT" location="faxil_slave.v:678.3-678.36" id="_witness_.check_assert_faxil_slave_v_678_276">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:679.3-679.36" time="0" type="ASSERT" location="faxil_slave.v:679.3-679.36" id="_witness_.check_assert_faxil_slave_v_679_278">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:688.3-688.35" time="0" type="ASSERT" location="faxil_slave.v:688.3-688.35" id="_witness_.check_assert_faxil_slave_v_688_283">
</testcase>
<testcase classname="prf" name="Property ASSERT in mem_led_axi/u_formal at faxil_slave.v:701.10-701.57" time="0" type="ASSERT" location="faxil_slave.v:701.10-701.57" id="_witness_.check_assert_faxil_slave_v_701_402">
</testcase>
<testcase classname="prf" name="Property COVER in mem_led_axi/u_formal at faxil_slave.v:754.4-754.41" time="0" type="COVER" location="faxil_slave.v:754.4-754.41" id="_witness_.check_cover_faxil_slave_v_754_367">
<skipped />
</testcase>
<testcase classname="prf" name="Property COVER in mem_led_axi/u_formal at faxil_slave.v:764.4-764.41" time="0" type="COVER" location="faxil_slave.v:764.4-764.41" id="_witness_.check_cover_faxil_slave_v_764_370">
<skipped />
</testcase>
<testcase classname="prf" name="Property COVER in mem_led_axi/u_formal at faxil_slave.v:781.4-781.42" time="0" type="COVER" location="faxil_slave.v:781.4-781.42" id="_witness_.check_cover_faxil_slave_v_781_382">
<skipped />
</testcase>
<testcase classname="prf" name="Property COVER in mem_led_axi/u_formal at faxil_slave.v:799.4-799.41" time="0" type="COVER" location="faxil_slave.v:799.4-799.41" id="_witness_.check_cover_faxil_slave_v_799_394">
<skipped />
</testcase>
<system-out>SBY  0:19:08 [mem_led_axi_prf] Removing directory '/home/hamed/FPGA/Tools/litex-hub/litex-examples/verilog-module/verilog/mem_led_axi_prf'.
SBY  0:19:08 [mem_led_axi_prf] Copy '/home/hamed/FPGA/Tools/litex-hub/litex-examples/verilog-module/verilog/mem_led_axi.v' to '/home/hamed/FPGA/Tools/litex-hub/litex-examples/verilog-module/verilog/mem_led_axi_prf/src/mem_led_axi.v'.
SBY  0:19:08 [mem_led_axi_prf] Copy '/home/hamed/FPGA/Tools/litex-hub/litex-examples/verilog-module/verilog/faxil_slave.v' to '/home/hamed/FPGA/Tools/litex-hub/litex-examples/verilog-module/verilog/mem_led_axi_prf/src/faxil_slave.v'.
SBY  0:19:08 [mem_led_axi_prf] engine_0: smtbmc
SBY  0:19:08 [mem_led_axi_prf] base: starting process &quot;cd mem_led_axi_prf/src; yosys -ql ../model/design.log ../model/design.ys&quot;
SBY  0:19:09 [mem_led_axi_prf] base: finished (returncode=0)
SBY  0:19:09 [mem_led_axi_prf] prep: starting process &quot;cd mem_led_axi_prf/model; yosys -ql design_prep.log design_prep.ys&quot;
SBY  0:19:09 [mem_led_axi_prf] prep: finished (returncode=0)
SBY  0:19:09 [mem_led_axi_prf] smt2: starting process &quot;cd mem_led_axi_prf/model; yosys -ql design_smt2.log design_smt2.ys&quot;
SBY  0:19:09 [mem_led_axi_prf] smt2: finished (returncode=0)
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: starting process &quot;cd mem_led_axi_prf; yosys-smtbmc --presat --unroll --noprogress -t 20  --append 0 --dump-vcd engine_0/trace.vcd --dump-yw engine_0/trace.yw --dump-vlogtb engine_0/trace_tb.v --dump-smtc engine_0/trace.smtc model/design_smt2.smt2&quot;
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: starting process &quot;cd mem_led_axi_prf; yosys-smtbmc --presat --unroll -i --noprogress -t 20  --append 0 --dump-vcd engine_0/trace_induct.vcd --dump-yw engine_0/trace_induct.yw --dump-vlogtb engine_0/trace_induct_tb.v --dump-smtc engine_0/trace_induct.smtc model/design_smt2.smt2&quot;
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: ##   0:00:00  Solver: yices
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Solver: yices
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: ##   0:00:00  Trying induction in step 20..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 0..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 0..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 1..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 1..
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: ##   0:00:00  Trying induction in step 19..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 2..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 2..
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: ##   0:00:00  Trying induction in step 18..
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: ##   0:00:00  Temporal induction successful.
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: ##   0:00:00  Status: passed
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 3..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 3..
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: finished (returncode=0)
SBY  0:19:09 [mem_led_axi_prf] engine_0.induction: Status returned by engine for induction: pass
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 4..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 4..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 5..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 5..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 6..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 6..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 7..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 7..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 8..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 8..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 9..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 9..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 10..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 10..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 11..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 11..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 12..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 12..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 13..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 13..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 14..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 14..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 15..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 15..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 16..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 16..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 17..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 17..
SBY  0:19:09 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 18..
SBY  0:19:10 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 18..
SBY  0:19:10 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 19..
SBY  0:19:10 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 19..
SBY  0:19:10 [mem_led_axi_prf] engine_0.basecase: ##   0:00:00  Status: passed
SBY  0:19:10 [mem_led_axi_prf] engine_0.basecase: finished (returncode=0)
SBY  0:19:10 [mem_led_axi_prf] engine_0.basecase: Status returned by engine for basecase: pass
SBY  0:19:10 [mem_led_axi_prf] summary: Elapsed clock time [H:MM:SS (secs)]: 0:00:01 (1)
SBY  0:19:10 [mem_led_axi_prf] summary: Elapsed process time [H:MM:SS (secs)]: 0:00:01 (1)
SBY  0:19:10 [mem_led_axi_prf] summary: engine_0 (smtbmc) returned pass for basecase
SBY  0:19:10 [mem_led_axi_prf] summary: engine_0 (smtbmc) returned pass for induction
SBY  0:19:10 [mem_led_axi_prf] summary: engine_0 did not produce any traces
SBY  0:19:10 [mem_led_axi_prf] summary: successful proof by k-induction.
SBY  0:19:10 [mem_led_axi_prf] DONE (PASS, rc=0)
</system-out>
<system-err>
</system-err>
</testsuite>
</testsuites>

// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package csr_pkg;

    localparam CSR_DATA_WIDTH = 32;
    localparam CSR_MIN_ADDR_WIDTH = 5;

    typedef struct {
        logic [7:0] next;
    } csr__uart__rx__data__in_t;

    typedef struct {
        logic next;
    } csr__uart__rx__oflow__in_t;

    typedef struct {
        logic next;
    } csr__uart__rx__valid__in_t;

    typedef struct {
        csr__uart__rx__data__in_t data;
        csr__uart__rx__oflow__in_t oflow;
        csr__uart__rx__valid__in_t valid;
    } csr__uart__rx__in_t;

    typedef struct {
        logic next;
    } csr__uart__tx__busy__in_t;

    typedef struct {
        csr__uart__tx__busy__in_t busy;
    } csr__uart__tx__in_t;

    typedef struct {
        csr__uart__rx__in_t rx;
        csr__uart__tx__in_t tx;
    } csr__uart__in_t;

    typedef struct {
        logic next;
    } csr__gpio__key1__in_t;

    typedef struct {
        logic next;
    } csr__gpio__key2__in_t;

    typedef struct {
        csr__gpio__key1__in_t key1;
        csr__gpio__key2__in_t key2;
    } csr__gpio__in_t;

    typedef struct {
        csr__uart__in_t uart;
        csr__gpio__in_t gpio;
    } csr__in_t;

    typedef struct {
        logic swacc;
    } csr__uart__rx__data__out_t;

    typedef struct {
        csr__uart__rx__data__out_t data;
    } csr__uart__rx__out_t;

    typedef struct {
        logic value;
    } csr__uart__rx_trigger_read_2925067f__read_next_708aa0d6__out_t;

    typedef struct {
        csr__uart__rx_trigger_read_2925067f__read_next_708aa0d6__out_t read;
    } csr__uart__rx_trigger_read_2925067f__out_t;

    typedef struct {
        logic [7:0] value;
        logic swmod;
    } csr__uart__tx__data__out_t;

    typedef struct {
        csr__uart__tx__data__out_t data;
    } csr__uart__tx__out_t;

    typedef struct {
        logic value;
    } csr__uart__tx_trigger_write_d2a2fe0e__write_next_c7fe028d__out_t;

    typedef struct {
        csr__uart__tx_trigger_write_d2a2fe0e__write_next_c7fe028d__out_t write;
    } csr__uart__tx_trigger_write_d2a2fe0e__out_t;

    typedef struct {
        csr__uart__rx__out_t rx;
        csr__uart__rx_trigger_read_2925067f__out_t rx_trigger;
        csr__uart__tx__out_t tx;
        csr__uart__tx_trigger_write_d2a2fe0e__out_t tx_trigger;
    } csr__uart__out_t;

    typedef struct {
        logic value;
    } csr__gpio__led1__out_t;

    typedef struct {
        logic value;
    } csr__gpio__led2__out_t;

    typedef struct {
        csr__gpio__led1__out_t led1;
        csr__gpio__led2__out_t led2;
    } csr__gpio__out_t;

    typedef struct {
        logic [15:0] value;
    } csr__hw_id__PRODUCT__out_t;

    typedef struct {
        logic [15:0] value;
    } csr__hw_id__VENDOR__out_t;

    typedef struct {
        csr__hw_id__PRODUCT__out_t PRODUCT;
        csr__hw_id__VENDOR__out_t VENDOR;
    } csr__hw_id__out_t;

    typedef struct {
        logic [15:0] value;
    } csr__hw_version__PATCH__out_t;

    typedef struct {
        logic [7:0] value;
    } csr__hw_version__MINOR__out_t;

    typedef struct {
        logic [7:0] value;
    } csr__hw_version__MAJOR__out_t;

    typedef struct {
        csr__hw_version__PATCH__out_t PATCH;
        csr__hw_version__MINOR__out_t MINOR;
        csr__hw_version__MAJOR__out_t MAJOR;
    } csr__hw_version__out_t;

    typedef struct {
        csr__uart__out_t uart;
        csr__gpio__out_t gpio;
        csr__hw_id__out_t hw_id;
        csr__hw_version__out_t hw_version;
    } csr__out_t;
endpackage
